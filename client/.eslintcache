[{"C:\\Users\\max_d\\OneDrive\\Desktop\\fullstack-chucknorris\\client\\src\\index.tsx":"1","C:\\Users\\max_d\\OneDrive\\Desktop\\fullstack-chucknorris\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\max_d\\OneDrive\\Desktop\\fullstack-chucknorris\\client\\src\\App.tsx":"3","C:\\Users\\max_d\\OneDrive\\Desktop\\fullstack-chucknorris\\client\\src\\components\\Categories.tsx":"4","C:\\Users\\max_d\\OneDrive\\Desktop\\fullstack-chucknorris\\client\\src\\screens\\HomeScreen.tsx":"5","C:\\Users\\max_d\\OneDrive\\Desktop\\fullstack-chucknorris\\client\\src\\apollo\\client.ts":"6","C:\\Users\\max_d\\OneDrive\\Desktop\\fullstack-chucknorris\\client\\src\\screens\\JokeScreen.tsx":"7","C:\\Users\\max_d\\OneDrive\\Desktop\\fullstack-chucknorris\\client\\src\\store.ts":"8","C:\\Users\\max_d\\OneDrive\\Desktop\\fullstack-chucknorris\\client\\src\\reducers\\jokeReducer.ts":"9","C:\\Users\\max_d\\OneDrive\\Desktop\\fullstack-chucknorris\\client\\src\\actions\\types.ts":"10","C:\\Users\\max_d\\OneDrive\\Desktop\\fullstack-chucknorris\\client\\src\\actions\\jokeActions.ts":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":1433,"mtime":1610544637566,"results":"15","hashOfConfig":"13"},{"size":1546,"mtime":1610544936806,"results":"16","hashOfConfig":"13"},{"size":753,"mtime":1610545327011,"results":"17","hashOfConfig":"13"},{"size":184,"mtime":1610457987176,"results":"18","hashOfConfig":"13"},{"size":887,"mtime":1610544879271,"results":"19","hashOfConfig":"13"},{"size":779,"mtime":1610540613142,"results":"20","hashOfConfig":"13"},{"size":1093,"mtime":1610540611635,"results":"21","hashOfConfig":"13"},{"size":169,"mtime":1610530186590,"results":"22","hashOfConfig":"13"},{"size":1881,"mtime":1610542179858,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"6uxf22",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},"C:\\Users\\max_d\\OneDrive\\Desktop\\fullstack-chucknorris\\client\\src\\index.tsx",[],["49","50"],"C:\\Users\\max_d\\OneDrive\\Desktop\\fullstack-chucknorris\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\max_d\\OneDrive\\Desktop\\fullstack-chucknorris\\client\\src\\App.tsx",["51"],"C:\\Users\\max_d\\OneDrive\\Desktop\\fullstack-chucknorris\\client\\src\\components\\Categories.tsx",["52","53"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getRandomJoke, getAllCategories } from \"../actions/jokeActions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport categoryStyles from \"./categories.module.css\";\r\nimport axios from \"axios\";\r\n\r\n// TS props is an array of strings with each category name from API\r\n\r\ninterface Props {\r\n  categories: string[];\r\n}\r\n\r\nconst Categories: React.FC<Props> = ({ categories }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllCategories());\r\n  }, []);\r\n  const [jokeCategory, setJokeCategory] = useState(\"\");\r\n\r\n  const categoryClickHandler = (e: any) => {\r\n    setJokeCategory(e.target.innerHTML);\r\n    console.log(jokeCategory);\r\n    dispatch(getRandomJoke(jokeCategory));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Joke Categories:</h2>\r\n      <p>Select a category for a random joke</p>\r\n      <div className={categoryStyles.categoriesContainer}>\r\n        {categories.map((cat, index) => {\r\n          return (\r\n            <div key={index} className={categoryStyles.categoryItem}>\r\n              <Link\r\n                to={{\r\n                  pathname: \"/randomJoke\",\r\n                  state: {\r\n                    chosenCategory: jokeCategory,\r\n                  },\r\n                }}\r\n              >\r\n                <button onClick={categoryClickHandler}>{cat}</button>\r\n              </Link>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","C:\\Users\\max_d\\OneDrive\\Desktop\\fullstack-chucknorris\\client\\src\\screens\\HomeScreen.tsx",[],"C:\\Users\\max_d\\OneDrive\\Desktop\\fullstack-chucknorris\\client\\src\\apollo\\client.ts",[],"C:\\Users\\max_d\\OneDrive\\Desktop\\fullstack-chucknorris\\client\\src\\screens\\JokeScreen.tsx",["54"],"C:\\Users\\max_d\\OneDrive\\Desktop\\fullstack-chucknorris\\client\\src\\store.ts",[],"C:\\Users\\max_d\\OneDrive\\Desktop\\fullstack-chucknorris\\client\\src\\reducers\\jokeReducer.ts",[],"C:\\Users\\max_d\\OneDrive\\Desktop\\fullstack-chucknorris\\client\\src\\actions\\types.ts",[],"C:\\Users\\max_d\\OneDrive\\Desktop\\fullstack-chucknorris\\client\\src\\actions\\jokeActions.ts",["55"],"import { GET_RANDOM_JOKE, GET_ALL_CATEGORIES } from \"./types\";\r\nimport { request, gql } from \"graphql-request\";\r\nimport axios from \"axios\";\r\n\r\n//actions for retrieving random joke and all categories\r\n\r\n//random joke action takes in category as argument, calls apollo request to graphql backend\r\nexport const getRandomJoke = (category: string) => async (dispatch: any) => {\r\n  //random joke graphql query\r\n  const randomJokeQuery = gql`\r\n    {\r\n      randomJokeByCategory(category: getRandomJoke.category) {\r\n        id\r\n        value\r\n      }\r\n    }\r\n  `;\r\n\r\n  // using graphql request package to make request\r\n  // request(\"https://localhost:5000/graphql\", randomJokeQuery, category)\r\n  axios\r\n    .get(\"https://localhost:5000/graphql\")\r\n    .then((joke) => console.log(joke))\r\n    .then((jokeData) => {\r\n      try {\r\n        console.log(jokeData);\r\n        dispatch({\r\n          type: GET_RANDOM_JOKE,\r\n          payload: {\r\n            jokeData,\r\n          },\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    });\r\n};\r\n\r\n//retrieve all categories action calls apollo query to request categories from backend\r\n\r\n//the action will save the categories as an array of strings in the actions payload\r\n\r\nexport const getAllCategories = () => (dispatch: any) => {\r\n  //get all categories graphql query\r\n  const getCategoriesQuery = gql`\r\n    {\r\n      getCategories {\r\n        category\r\n      }\r\n    }\r\n  `;\r\n  //using graphql request package for request to backend\r\n  request(\"https://localhost:5000/graphql\", getCategoriesQuery)\r\n    .then((categories) => console.log(categories))\r\n    .then((categoriesData) => {\r\n      try {\r\n        dispatch({\r\n          type: GET_ALL_CATEGORIES,\r\n          payload: {\r\n            categories: [categoriesData],\r\n          },\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    });\r\n};\r\n",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":33,"column":6,"nodeType":"62","endLine":33,"endColumn":8,"suggestions":"63"},{"ruleId":"64","severity":1,"message":"65","line":6,"column":8,"nodeType":"66","messageId":"67","endLine":6,"endColumn":13},{"ruleId":"60","severity":1,"message":"68","line":19,"column":6,"nodeType":"62","endLine":19,"endColumn":8,"suggestions":"69"},{"ruleId":"64","severity":1,"message":"70","line":7,"column":8,"nodeType":"66","messageId":"67","endLine":7,"endColumn":14},{"ruleId":"64","severity":1,"message":"71","line":10,"column":9,"nodeType":"66","messageId":"67","endLine":10,"endColumn":24},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'joke'. Either include it or remove the dependency array.","ArrayExpression",["74"],"@typescript-eslint/no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["75"],"'Loader' is defined but never used.","'randomJokeQuery' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"76","fix":"77"},{"desc":"78","fix":"79"},"Update the dependencies array to be: [joke]",{"range":"80","text":"81"},"Update the dependencies array to be: [dispatch]",{"range":"82","text":"83"},[869,871],"[joke]",[576,578],"[dispatch]"]